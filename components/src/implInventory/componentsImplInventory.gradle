plugins {
    // GenInclude plugin from file:///opt/wti-ui/components/src/implInventory/gradle/plugins
    id	"groovy"
    id	"java-library"
    id	"maven-publish"
}

// GenStart net.wti.gradle.settings.plugin.XapiSettingsPlugin
ext.xapiModern = 'true'
java.toolchain.languageVersion = JavaLanguageVersion.of(8)
repositories.mavenCentral()
// setup sourcesets

SourceSet main = sourceSets.maybeCreate('main');

SourceSet test = sourceSets.maybeCreate('test');
main.java.setSrcDirs([]);
main.resources.setSrcDirs([]);
test.java.setSrcDirs([]);
test.resources.setSrcDirs([]);
main.java.srcDir("$rootDir/components/src/implInventory/java")
test.groovy.srcDir("$rootDir/components/src/implInventoryTest/groovy")

dependencies {
    api project(path: ":gdx-themes-main")
    testImplementation libs.spock
    testImplementation libs.xapi.model.jre
    testImplementation libs.gdx.backend.headless
    testImplementation( libs.gdx.platform ) {
        artifact { classifier = 'natives-desktop' }
    }
    api project(path: ":components-inventory")
}
// Setup publishing to coordinates: net.wti:components-inventory-impl
project.extensions.add('xapi.mvn.repo', "$rootDir/repo")
Task xapiPublish = tasks.create('xapiPublish')
xapiPublish.group = 'Publishing'
xapiPublish.description = 'Publish jars to xapiLocal repository'
xapiPublish.dependsOn "publishXapiPublicationToXapiLocalRepository"

PublishingExtension ext = extensions.findByName(PublishingExtension.NAME) as PublishingExtension
ext.repositories.maven {
    MavenArtifactRepository repo ->
        repo.name = 'xapiLocal'
        repo.url = "file://$rootDir/repo"
}
// not really what we want, but it's good enough for right now
java.withSourcesJar()
java.withJavadocJar()

ext.publications.create("xapi", MavenPublication, {
    pub ->
        afterEvaluate {
            if (tasks.names.contains('shadowJar')) {
                shadow.component(pub)
            } else {
                pub.from(components.named('java').get())
            }
        }
        pub.artifactId = "components-inventory-impl"
        pub.groupId = "net.wti"
})
// GenEnd net.wti.gradle.settings.plugin.XapiSettingsPlugin
// GenInclude body.end from file:///opt/wti-ui/components/src/implInventory/gradle/body.end
tasks.named('test', Test).configure {
    Test t ->
        t.useJUnitPlatform()
}
// Done generating buildfile for :components at file://$rootDir/components/src/implInventory/componentsImplInventory.gradle
